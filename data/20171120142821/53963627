<!DOCTYPE html>
<html>
  <head>
    <link rel="canonical" href="http://blog.csdn.net/hn_lgc/article/details/53963627"/> 
    <script type="text/javascript">
        var username = "hn_lgc";
        var _blogger = username;
        var blog_address = "http://blog.csdn.net/hn_lgc";
        var static_host = "http://static.blog.csdn.net/";
        var currentUserName = ""; 
        var fileName = '53963627';
        var commentscount = 0;
        var islock = false
        window.quickReplyflag = true;
        var totalFloor = 0;
        var isBole = false;
        var isDigg = false;
        var isExpert=false;
        var isAdm = false;
    </script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.044">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="http://csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>

    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
    <script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">
        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end
    </script>
    <meta name="description" content="有两种方式，使用Android.mk构建文件和不使用的，
不使用Android.mk的：
首先配置好ndk工具，通过sdk manager下载即可，比较简单，这里略过。
1、首先声明native方法在某个类中：

public native String stringFromeJni();
2、点击build下面构建或make project，生成内点的.class文件

3、接着" />
    <meta name="keywords" content="android,ndk" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">
    
    <script src="http://static.blog.csdn.net/public/switchHome/switchHome.js?v=2017.046"></script>
    <!-- adhoc sdk -->
       <script src=https://sdk.appadhoc.com/ab.plus.js></script>
       <script>
       adhoc('init', {
         appKey: 'ADHOC_0e0bce4f-8793-4f68-89cf-34c14f2532bb',
         defaultFlags: {isLogin: true}
       })
       </script>
                 <!-- adhoc sdk end -->
    <title>Android Studio的gradle下配置ndk，jni - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net/"></script>
<div class="container clearfix">
  <main>
    <article>
        <h1 class="csdn_top">Android Studio的gradle下配置ndk，jni</h1>
        <div class="article_bar clearfix">
            <div class="artical_tag">
                <span class="original">
                原创                </span>
                <span class="time">2017年01月01日 06:05:15</span>
            </div>

            <ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
                <li class="tit">标签：</li>

<!--          [startarticletags]-->
                                                            <li><a href="http://so.csdn.net/so/search/s.do?q=android&t=blog" target="_blank">android</a> <span>/</span></li>
                                            <li><a href="http://so.csdn.net/so/search/s.do?q=ndk&t=blog" target="_blank">ndk</a> <span>/</span></li>
                                            <li><a href="http://so.csdn.net/so/search/s.do?q=jni&t=blog" target="_blank">jni</a> <span>/</span></li>
                                    <!--          [endarticletags]-->
            </ul>
            <ul class="right_bar">
                <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">3317</span></button></li>
<!--                <li><button class="btn-noborder but-comment-topicon"><i class="icon iconfont icon-pinglun"></i><span class="txt">--><!--</span></button></li>-->
<!--                <li><button class="btn-noborder btn-like"><i  class="icon iconfont icon-xihuan-"></i><span class="txt">--><!--</span></button></li>-->
                <li class="edit">
                    <a class="btn-noborder" href="" >
                        <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                    </a>
                </li>
                <li class="del">
                    <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                        <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                    </a>
                </li>
            </ul>
        </div>
        <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_519" data-dsm="post">
                        
<p style="text-align:center"><span style="white-space:pre"></span><strong><span style="font-size:24px">Android Studio的gradle下配置ndk，jni</span></strong><br>
</p>
<p style="text-align:center"><strong><span style="font-size:24px"><br>
</span></strong></p>
<p>有三种种方式，使用目前最新的CMake方式，使用ndk-build也就是Android.mk构建文件，还有只使用gradle简单配置的。</p>
<p>而目前Android Studio对CMake的支持要好得多，配置实际上更简单了，最重要的是使用cmake是支持断点调试的，并且可以使用Android Studio的智能代码提示和各种编辑功能。</p>
<p>这样native开发效率可以提升数倍，而另外的方式是不行的，所以基本上建议新的项目放弃其他方式，使用cmake。但有个小问题是目前网上资料少，遇到问题解决可能麻烦一些。</p>
<p><strong><span style="font-size:24px">使用CMake：</span></strong></p>
<p>分两种情况，新项目中使用，以及在旧项目中添加CMake支持：</p>
<p>官网上有相应的教程，是汉化版，操作并不太复杂，可以直接看。</p>
<p>https://developer.android.com/studio/projects/add-native-code.html<br>
</p>
<p>然后根据上面教程去学会几个Android Studio下cmake的常用命令，下面也有按自己的理解的介绍，只有几种，记住就好了，不会花太多时间。</p>
<p><br>
</p>
<p>另外想要进行NDK开发，最好要通过官网或其他途径了解native开发的相关知识，比如.a,.so库，ABI等等，以及JNI开发的一些知识。</p>
<p>（书籍《Android &nbsp;C&#43;&#43;使用NDK&#127;.pdf》，书中Android.mk、工具使用等的知识不用看）不然很难入手。</p>
<p><br>
</p>
<p><strong>1、关于CMake：</strong>先对cmake有个基本的了解，用起来会更有底气一些。因为目前在不同的平台上有不同的make工具，GNU &nbsp;Make，QT 的qmake，微软的msnMake等，一个库或代码项目如果想要在不同的平台上运行的话，就要针对不同的平台分别创建make脚本，然后分别make一次，而CMake就是为了解决这种繁琐的操作。为着跨平台而生的，编写好cmake的脚本后，他就会自动的为你生成不同平台的makefile，然后自动的make。</p>
<p>cmake的构建脚本就叫做CMakeList.txt,它的语法十分的简单：有命令，注释，空&#26684;组成。而命令有命令名称，小括号及参数组成。</p>
<p>命令有很多，基本命令是 cmake_minimum_required(VERSION x)表明最小的版本。</p>
<p><strong>2、cmake下面一些具体的操作：</strong></p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">set(pathToProject F:\\androidProject\\BaoZouPTu)</pre>
将项目目录放到一个方便的变量中，也可以不写，使用的时候直接写。
<p></p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">#支持-std=gnu&#43;&#43;11
set(CMAKE_VERBOSE_MAKEFILE on)
set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -std=gnu&#43;&#43;11&quot;)</pre>
支持的C&#43;&#43;的标准，这个要写上，不然一些C&#43;&#43;的API比如STL中可能就无法使用
<p></p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">add_library(imageSynthesis SHARED
                    ImageSynthesis.cpp
                    NewColorTransfer.cpp
                    MyUtil.cpp
                    edgeBlur.cpp
 )
</pre>
<p></p>
<p>将自己写的源文件编译到一个库比如imageSynthsis中，类型为共享库，这里注意所有用到的源文件都必须编译 到库中，头文件不用写进去。然后可以有多个库，后面连接起来就行了。</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">target_link_libraries(imageSynthesis log android -ljnigraphics lib_opencv)</pre>
将自己生成的库，系统的库链接到目标上。
<p></p>
<p>加入第三方的库，这里以OpenCv为例：</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">#配置加载native依赖
include_directories(${pathToOpenCv}/sdk/native/jni/include)
#动态方式加载
add_library(lib_opencv STATIC IMPORTED )
#引入libopencv_java3.so文件
set_target_properties(lib_opencv
                       PROPERTIES
                       IMPORTED_LOCATION ${pathToProject}/app/src/main/jniLibs/${ANDROID_ABI}/libopencv_java3.so
                       )
</pre>
第一条命令包含库的头文件目录，
<p></p>
<p>第二条命令 指定库名称；导入方式，这里注意 静态导入和动态导入区别：静态导入静态库时是将库里面的内容抠出来放到你的库中去，而另外三种则不会，他们会直接将库赋&#20540;到你的apk中，这可能到&#20540;体积过大。然后import表明是导入的库，而不是用源文件创建的库，在下一条命令导入</p>
<p>第三条命令 属性和导入需要的库的绝对路径，.so或.a都可以。第二个参数表示选取的哭的属性，不如如果导入的目录下有多个ABI对应的库，这里可以指定只导入哪些ABI种类的；然后根据头文件就可以在代码中使用了。</p>
<p>这里关于静态动态，体积的控制还有些需要探究的地方。</p>
<p><strong>3、控制ABI的话：</strong></p>
<p>需要在gradle中去配置：defaultconfig节点下面用它进行配置，貌&#20284;不能在cmake相关的地方控制</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">ndk {
    <span style="color:rgb(128,128,128)">// Specifies the ABI configurations of your native
</span><span style="color:#808080">    // libraries Gradle should build and package with your APK.
</span><span style="color:#808080">    </span>abiFilters <span style="color:#6a8759">'armeabi'
</span>}</pre>
<br>
<p></p>
<p><br>
</p>
<p><strong><span style="font-size:18px">使用CMmake时的一到库中些坑：</span></strong></p>
<p>（1）当编写了在Java代码中定义了一个本地native方法，然后快捷键让Android Studio自动生成native方法的实现时（CMake的优势），此方法要在外部调用，必须在方法前面加上一句</p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><span style="color:rgb(204,120,50)"><strong>extern </strong></span><span style="color:#6a8759">&quot;C&quot;</span></pre>
<p></p>
<p>而Android Studio自动生成的方法是不会添加的，运行起来就是找不到实现。</p>
<p>当时遇到这个问题也是困惑了大半天，愣是找不出问题，想着自动生成的方法明明在那儿，怎么会没有实现呢，后来通过直接new 一个C&#43;&#43;项目仔细看了不同才知道，这是目前 版本的一个坑吧，所以生成之后要自己手动在前面加上那句话。</p>
<p>（2）导入系统的库的时候，native的bitmap相关的api，头文件叫bitmap.h，然而并没有对应的bimap.x的库，它被包含在</p>
<pre style="background-color:rgb(43,43,43); color:rgb(169,183,198); font-family:宋体; font-size:10.5pt">-ljnigraphics</pre>
<p></p>
<p>中，所以在target_link_libraries的时候要链接上它，否则相关的api无法使用。</p>
<p>（3）初期开发过程中一定严&#26684;按照步骤来，不然因为不太了解，编译过程中出了什么问题要找半天，很费时间。出现问题时仔细看请错误提示，对解决很有帮助的。</p>
<p>（4）然后就是C&#43;&#43;的知识了，尤其是指针和引用的区别等，使用是我就经常遇到这两个没弄清半天找不出错误的情况。</p>
<p><br>
</p>
<p><strong><span style="font-size:18px">Android.mk以及纯使用gradle的</span></strong></p>
<p>（不推荐使用）</p>
<p><strong>一、gradle中简单配置的：</strong></p>
<p>首先配置好ndk工具，通过sdk manager下载即可，比较简单，这里略过。</p>
<p>1、首先声明native方法在某个类中：<br>
</p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><span style="color:#cc7832">public native </span>String <span style="color:#ffc66d">stringFromeJni</span>()<span style="color:#cc7832">;</span></pre>
2、点击build下面构建或make project，生成内点的.class文件
<p></p>
<p>3、<span style="color:rgb(54,46,43); font-family:Arial; font-size:18px">接着在Android Studio的terminate</span><span style="color:rgb(54,46,43); font-family:Arial; font-size:18px">终端cd 转到src/main/java文件夹下面</span></p>
<p><span style="color:rgb(54,46,43); font-family:Arial; font-size:18px">输入 &nbsp;</span><span style="font-size:14px; color:rgb(51,51,51); font-family:arial,宋体,sans-serif; line-height:28px"><span style="font-size:24px">javah&nbsp;-d&nbsp;../jni &lt;包名&gt;.&lt;所在类的类名&gt; &nbsp;回车</span></span></p>
<p>Javah系统会自动生成头文件，在jni目录下面。</p>
<p>（注意如果代码中包含中文，可能出现这个问题“错误: 编码UTF-8的不可映射字符”</p>
<p>这时在刚才的命令行中加入字符集指定</p>
<p>javah -d ../jni &nbsp;-encoding UTF-8 &nbsp;a.baozouptu.ptu.tietu.pictureSynthesis.PictureSynthesis</p>
<p>&nbsp;UTF-8 这个字符集是Android Studio右下角指明的，如果还不行的话，点击右下角转换其它字符集，再加到命令行中尝试<br>
</p>
<p>最后不行的话先去注释掉中文，生成头文件之后在加入之）</p>
<p><img src="" alt=""><br>
</p>
<p>4、新建c源文件，然后复制头文件名作文新建c源文件的头文件库</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><span style="color:rgb(187,181,41)">#include</span><span style="color:#6a8759"> &lt;com_lgc_ndklearning_MainActivity.h&gt;
</span><span style="color:#6a8759">
</span><span style="color:#6a8759">
</span><span style="color:#6a8759">
</span>JNIEXPORT jstring JNICALL Java_com_lgc_ndklearning_MainActivity_stringFromeJni
  (JNIEnv *env<span style="color:#cc7832">, </span>jobject)
  {
  <span style="color:#cc7832"><strong>return </strong></span>env-&gt;NewStringUTF(<span style="color:#6a8759">&quot;hello jni&quot;</span>)<span style="color:#cc7832">;
</span><span style="color:#cc7832">  </span>}

</pre>
在里面写上代码。
<p></p>
<p>6、配置gradle</p>
<p><span style="font-family:宋体; color:#cc7832"><span style="font-size:14px; white-space:pre">在module的defaultConfig节点下面加上如下，指定abi，库的名称等</span></span><br>
</p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">ndk{
    <span style="color:#9876aa">moduleName </span><span style="color:#6a8759">&quot;jnilib&quot;
</span><span style="color:#6a8759">    </span>ldLibs <span style="color:#6a8759">&quot;log&quot;</span>,<span style="color:#6a8759">&quot;z&quot;</span>,<span style="color:#6a8759">&quot;m&quot;
</span><span style="color:#6a8759">    </span>abiFilters <span style="color:#6a8759">&quot;armeabi&quot;</span>,<span style="color:#6a8759">&quot;armeabi-v7a&quot;
</span>}</pre>
7、最后在gradle.properties文件末尾加上一句
<p></p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><span style="color:#cc7832">android.useDeprecatedNdk</span><span style="color:#808080">=</span><span style="color:#6a8759">true</span></pre>
8、使用这个native方法前，使用<span style="font-family:宋体; color:#cc7832"><span style="font-size:14px; white-space:pre">如下</span></span><br>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><span style="color:#cc7832">static </span>{
    System.<span style="font-style:italic">loadLibrary</span>(<span style="color:#6a8759">&quot;hello-jni&quot;</span>)<span style="color:#cc7832">;
</span>}</pre>
加载共享库。
<p></p>
<p>方法这样整个配置就完成了，上面的函数可以当做一般的方法调用的。</p>
<p><strong><br>
</strong></p>
<p><strong>二、使用Android.mk文件。</strong></p>
<p>使用Android.mk文件时，其他可以不变，需要改动的就两个地方</p>
<p>首先gradle删除第一种方式添加的ndk节点，添加如下内容,在defaultConfig节点后面</p>
<p>前面的必须删除，因为两种方式是冲突的，如果不是会出现很难处理的问题。</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt"><pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">    <span style="color:#808080">/*  ndk{
</span><span style="color:#808080">          moduleName &quot;jnilib&quot;
</span><span style="color:#808080">          ldLibs &quot;log&quot;,&quot;z&quot;,&quot;m&quot;
</span><span style="color:#808080">          abiFilters &quot;armeabi&quot;,&quot;armeabi-v7a&quot;
</span><span style="color:#808080">      }*/
</span>}
sourceSets.<span style="color:#6a8759">main </span>{
    jni.srcDirs = []
}
task ndkBuild(<span style="color:#6a8759">type</span>: Exec, <span style="color:#6a8759">description</span>: <span style="color:#6a8759">'Compile JNI source via NDK'</span>) {
    commandLine <span style="color:#6a8759">'F:</span><span style="color:#cc7832">\\</span><span style="color:#6a8759">Android</span><span style="color:#cc7832">\\</span><span style="color:#6a8759">sdk</span><span style="color:#cc7832">\\</span><span style="color:#6a8759">ndk-bundle</span><span style="color:#cc7832">\\</span><span style="color:#6a8759">ndk-build.cmd'</span>,<span style="color:#808080">//这里本地ndk的路径
</span><span style="color:#808080">            </span><span style="color:#6a8759">'NDK_PROJECT_PATH=build/intermediates/ndk'</span>,
            <span style="color:#6a8759">'NDK_LIBS_OUT=src/main/jniLibs'</span>,
            <span style="color:#6a8759">'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
</span><span style="color:#6a8759">            'NDK_APPLICATION_MK=src/main/jni/Application.mk'
</span>}
<span style="color:#9876aa">tasks</span>.withType(JavaCompile){
    compileTask-&gt;compileTask.dependsOn ndkBuild
}
</pre></pre>
<br>
<p></p>
<p>2.让后在生成的jni目录下面新建Android.mk文件和Application.mk两个文件，添加如下内容</p>
<p>Android.mk</p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">LOCAL_PATH :=$(call my-dir)
include $(CLEAR_VARS)
LOCAL_MODULE :=hello-jni    生成的so库的名称
LOCAL_SRC_FILES :=com_lgc_ndklearning_MainActivity.cpp  源文件名
include $(BUILD_SHARED_LIBRARY)</pre>
Application.mk&nbsp;
<p></p>
<p></p>
<pre style="background-color:#2b2b2b; color:#a9b7c6; font-family:'宋体'; font-size:10.5pt">APP_ABI :=armeabi armeabi-v7a</pre>
指定一下abi版本
<p></p>
<p>这样就行了</p>
                    </div>
    </article>
      <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
          <div class="read_more_mask"></div>
          <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
      </div>
      <div class="article_copyright">
              </div>
      <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
          <li class="tit">本文已收录于以下专栏：</li>
<!--          [startarticlecolumns]-->
                                <!--          [endarticlecolumns]-->
      </ul>
      <div class="comment_box clearfix">
          <div id="comment_form">
              <div id="commentsbmitarear">
                              </div>
          </div>
      </div>
      <div class="comment_li_outbox">
          <div id="comment_list"></div>
      </div>

      <div class="more_comment">
          <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
      </div>

      <h3 class="recommend_tit">相关文章推荐</h3>
      <div class="recommend_list clearfix">
                                                                                                                  <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/sbsujjbcy/article/details/48469569"  target="_blank" strategy="BlogCommendFromBaidu_0">Android Studio使用新的Gradle构建工具配置NDK环境</a></h2>
                              <div class="summary">
                                  从Android Studio 1.3 Beta1开始，就支持了NDK。不过使用的是一个全新的实验性的gradle构建工具。官方地址http://tools.android.com/tech-docs...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/sbsujjbcy" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/1/4/4/3_sbsujjbcy.jpg" alt="sbsujjbcy" title="sbsujjbcy"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/sbsujjbcy">sbsujjbcy</a></li>
                                  <li class="time">2015年09月15日 16:33</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>30955</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/jasonwang18/article/details/55504906"  target="_blank" strategy="BlogCommendFromBaidu_1">Android Studio使用新的Gradle构建工具配置NDK环境（三）</a></h2>
                              <div class="summary">
                                  上篇我们分析了如何采用gradle脚本就行ndk交叉编译，本篇我们将讨论如何用Android studio最新的cmake体系来进行Android ndk的交叉编译。


CMake是一个跨平台的安装...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/jasonwang18" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/2/A/1/3_jasonwang18.jpg" alt="jasonwang18" title="jasonwang18"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/jasonwang18">jasonwang18</a></li>
                                  <li class="time">2017年02月17日 10:07</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2724</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                              <script>
                          (function() {
                              var s = "_" + Math.random().toString(36).slice(2);
                              document.write('<div id="' + s + '"></div>');
                              (window.slotbydup=window.slotbydup || []).push({
                                  id: '4765209',
                                  container: s,
                                  size: '808,120',
                                  display: 'inlay-fix'
                              });
                          })();
                      </script>
                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/XXOOYC/article/details/48523669"  target="_blank" strategy="BlogCommendFromBaidu_2">gradle编译ndk失败</a></h2>
                              <div class="summary">
                                  将Eclipse Project移到Android Studio中，遇到很多问题。


问题1：我的Application.mk中申明了只编译ARM 32位，移过去却发现在编译ARM 64，于是Fai...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/XXOOYC" target="_blank" strategy="BlogCommendFromBaidu_2"><img src="http://avatar.csdn.net/0/5/6/3_xxooyc.jpg" alt="XXOOYC" title="XXOOYC"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/XXOOYC">XXOOYC</a></li>
                                  <li class="time">2015年09月17日 16:34</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>765</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/a396901990/article/details/51922182"  target="_blank" strategy="BlogCommendFromBaidu_3">NDK开发－Android Studio+gradle-experimental开发ndk</a></h2>
                              <div class="summary">
                                  NDK开发－Android Studio+gradle-experimental开发ndk                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/a396901990" target="_blank" strategy="BlogCommendFromBaidu_3"><img src="http://avatar.csdn.net/D/8/B/3_a396901990.jpg" alt="a396901990" title="a396901990"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/a396901990">a396901990</a></li>
                                  <li class="time">2016年08月01日 10:14</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3538</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/ashqal/article/details/21869151"  target="_blank" strategy="BlogCommendFromBaidu_4">【android ndk】macos环境下Android Studio中利用gradle编译jni模块及配置</a></h2>
                              <div class="summary">
                                  Android Studio使用gradle对jni中的代码进行自动编译，很方便，推荐大家使用，下面是我总结的入门教程，包括了模块的配置...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/ashqal" target="_blank" strategy="BlogCommendFromBaidu_4"><img src="http://avatar.csdn.net/7/F/4/3_ashqal.jpg" alt="ashqal" title="ashqal"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/ashqal">ashqal</a></li>
                                  <li class="time">2014年03月23日 15:12</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>46968</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                            <!-- 广告位：PC端-博客详情通栏7（feed流）-808*120 -->
                      <script>
                          (function() {
                              var s = "_" + Math.random().toString(36).slice(2);
                              document.write('<div id="' + s + '"></div>');
                              (window.slotbydup=window.slotbydup || []).push({
                                  id: '4983339',
                                  container: s,
                                  size: '808,120',
                                  display: 'inlay-fix'
                              });
                          })();
                      </script>
                                                                                                  <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/carson_ho/article/details/73250163"  target="_blank" strategy="BlogCommendFromBaidu_5">Android：JNI 与 NDK到底是什么？（含实例教学）</a></h2>
                              <div class="summary">
                                  前言
在Android开发中，使用 NDK开发的需求正逐渐增大
但很多人却搞不懂 JNI 与 NDK 到底是怎么回事
今天，我将先介绍JNI 与 NDK  & 之间的区别，手把手进行 NDK的使用教学...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/carson_ho" target="_blank" strategy="BlogCommendFromBaidu_5"><img src="http://avatar.csdn.net/C/8/C/3_carson_ho.jpg" alt="carson_ho" title="carson_ho"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/carson_ho">carson_ho</a></li>
                                  <li class="time">2017年06月14日 17:03</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>9552</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/qiujuer/article/details/24209457"  target="_blank" strategy="BlogCommendFromBaidu_6">[Android][Android Studio] Gradle项目中添加JNI生成文件(.so文件)</a></h2>
                              <div class="summary">
                                  使用Android Studio进行开发时打包.SO（JNI）文件的几种方式以及历史。                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/qiujuer" target="_blank" strategy="BlogCommendFromBaidu_6"><img src="http://avatar.csdn.net/3/6/5/3_qiujuer.jpg" alt="qiujuer" title="qiujuer"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/qiujuer">qiujuer</a></li>
                                  <li class="time">2014年04月21日 01:05</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>34038</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/harry_helei/article/details/53184234"  target="_blank" strategy="BlogCommendFromBaidu_7">Gradle环境下添加JNI编译</a></h2>
                              <div class="summary">
                                  这里只涉及如何在build.gradle文件中添加自动编译配置，不包括如何JNI文件的新建和添加。
      本人所用的gradle版本为V3.1。


1、修改local.properties属性...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/harry_helei" target="_blank" strategy="BlogCommendFromBaidu_7"><img src="http://avatar.csdn.net/B/D/1/3_harry_helei.jpg" alt="harry_helei" title="harry_helei"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/harry_helei">harry_helei</a></li>
                                  <li class="time">2016年11月16日 11:09</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1113</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/mzx0078/article/details/51557805"  target="_blank" strategy="BlogCommendFromBaidu_8">Android Studio使用gradle-experimental构建NDK工程(无需Android.mk、Application.mk文件)</a></h2>
                              <div class="summary">
                                  1.首先新建一个Android工程Gradle_Experimental_NDK，我们打开Gradle_Experimental_NDK/gradle/wrapper下的gradle-wrapper....                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/mzx0078" target="_blank" strategy="BlogCommendFromBaidu_8"><img src="http://avatar.csdn.net/6/B/3/3_mzx0078.jpg" alt="mzx0078" title="mzx0078"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/mzx0078">mzx0078</a></li>
                                  <li class="time">2016年06月01日 17:46</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2914</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                          <dd>
                              <h2><a href="http://blog.csdn.net/cauchyweierstrass/article/details/53261581"  target="_blank" strategy="BlogCommendFromBaidu_9">AndroidStudio使用NDK配置方法</a></h2>
                              <div class="summary">
                                  配置Gradle生成so
编译多个模块
关联Androidmk到Gradle
使用cmake
配置Gradle生成so在AndroidStudio2.1及以前我是通过下面的方式配置NDK的，不知道是从...                              </div>
                              <ul>
                                  <li class="avatar_img"><a href="http://blog.csdn.net/cauchyweierstrass" target="_blank" strategy="BlogCommendFromBaidu_9"><img src="http://avatar.csdn.net/3/B/0/3_cauchyweierstrass.jpg" alt="cauchyweierstrass" title="cauchyweierstrass"></a></li>
                                  <li class="user_name"><a href="http://blog.csdn.net/cauchyweierstrass">cauchyweierstrass</a></li>
                                  <li class="time">2016年11月21日 17:28</li>
                                  <li class="visited_num"><i class="icon iconfont icon-read"></i><span>6387</span></li>
                              </ul>
                          </dd>
                      </dl>
                                                                    </div>
  </main>
<aside>
  <div class="right_box user_info">
      <dl class="inf_bar clearfix">
          <dt class="csdn-tracking-statistics" data-mod="popu_381">
              <a href="http://blog.csdn.net/hn_lgc" target="_blank">
                  <img src="http://avatar.csdn.net/2/6/F/3_hn_lgc.jpg" class="avatar_pic">
              </a>
              <span class="medals" title="">
                  </span>
          </dt>
          <dd>
              <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/hn_lgc" target="_blank" id="uid">hn_lgc</a></h3>
              <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
          </dd>
      </dl>
      <div class="inf_number_box clearfix">
          <dl>
              <dt>原创</dt>
              <dd>44</dd>
          </dl>
          <dl>
              <dt>粉丝</dt>
              <dd id='fan'>2</dd>
          </dl>
          <dl>
              <dt>喜欢</dt>
              <dd>1</dd>
          </dl>
          <dl>
        <dt>码云</dt>
        <dd>&nbsp;</dd>
      </dl>

      </div>
  <div class="writings">
        <div class="public_signal clearfix">
          <h3>他的最新文章</h3>
          <a href="http://blog.csdn.net/hn_lgc" target="_blank" class="more"><span>更多文章</span></a>
        </div>
          <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/hn_lgc/article/details/78421194" target="_blank">文件操作一些特性</a>
              </li>
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/hn_lgc/article/details/78193059" target="_blank">git的学习二</a>
              </li>
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/hn_lgc/article/details/78190239" target="_blank">电脑等工具</a>
              </li>
                        </ul>
      </div>
  </div>
  <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
     <!--u3032528-->
    <div class="flashrecommend">
        <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
    </div>
  </div>

<!--    [StartShowSelfColumn]-->
    <!--    [EndShowSelfColumn]-->
    <div class="fixRight">
        <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
            <h3 class="tit"><span><em>在线课程</em></span></h3>
            <ul class="edu_li clearfix">
<!--            [starteducourses]-->
                                                            <li>
                            <div>
                                <a href="http://edu.csdn.net/huiyiCourse/series_detail/72?utm_source=blog7" target="_blank">
                                    <img src="http://img.bss.csdn.net/201711141432559281.png" alt="React API设计上的精华糟点及使用注意点"
                                         title="React API设计上的精华糟点及使用注意点">
                                </a>
                            </div>
                            <div>
                                <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/72?utm_source=blog7"
                                      target="_blank">React API设计上的精华糟点及使用注意点</a></p>
                                <p>讲师：钟钦成</p>
                            </div>
                        </li>
                                            <li>
                            <div>
                                <a href="http://edu.csdn.net/huiyiCourse/detail/594?utm_source=blog7" target="_blank">
                                    <img src="http://img.bss.csdn.net/201711141029037427.png" alt="C语言大型软件设计的面向对象"
                                         title="C语言大型软件设计的面向对象">
                                </a>
                            </div>
                            <div>
                                <p><a href="http://edu.csdn.net/huiyiCourse/detail/594?utm_source=blog7"
                                      target="_blank">C语言大型软件设计的面向对象</a></p>
                                <p>讲师：宋宝华</p>
                            </div>
                        </li>
                                    <!--            [endeducourses]-->
            </ul>
            </div>
        <div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
            <!--u3032528-->
            <div class="flashrecommend">
                <!-- 请置于所有广告位代码之前 -->
                <script src="http://dup.baidustatic.com/js/dm.js"></script>

                <!-- 广告位：PC端-博客详情页右侧视窗1（feed流）-300*250 -->
                <script>
                    (function() {
                        var s = "_" + Math.random().toString(36).slice(2);
                        document.write('<div id="' + s + '"></div>');
                        (window.slotbydup=window.slotbydup || []).push({
                            id: '4770930',
                            container: s,
                            size: '300,250',
                            display: 'inlay-fix'
                        });
                    })();
                </script>
            </div>
        </div>

    </div>
    <div class="user-hotArticle">
        <h3>热门文章</h3>
        <ul class="hotArticle-list csdn-tracking-statistics" data-mod="popu_521">
<!--            [StartHotArticles]-->
                                                <li>
                        <a href="http://blog.csdn.net/hn_lgc/article/details/3844797">Android Studio 使用本地的gradle</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>6216</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/hn_lgc/article/details/3844797">Android使用intent跳转到其它应用activity界面</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5786</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/hn_lgc/article/details/3844797">Android Studio的gradle下配置ndk，jni</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3287</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/hn_lgc/article/details/3844797">Android Studio上编写运行Java代码</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2193</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/hn_lgc/article/details/3844797">Android 简单的条形颜色选择器</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1772</span></div>
                    </li>
                            <!--            [EndHotArticles]-->
        </ul>
    </div>
<!--    [startcustom]-->
    <!--    [endcustom]-->
</aside></div>

<div class="left_fixed">
    <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
    </div>
    <ul class="left_menu">
        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <a href="javascript:void(0);" class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></a>
                <a class="txt" href="javascript:void(0);">0</a>
            </button>
        </li>
        <li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <a href="javascript:void(0);" class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></a>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <!--        <li>-->
        <!--            <button class="left-fixed-btn btn-like tracking-ad" data-mod="popu_373" target="_self">-->
        <!--                <span class="iconbox border_red"><i class="icon iconfont icon-xihuan-"></i></span>-->
        <!--                <span class="txt">喜欢</span>-->
        <!--                <span class="untxt">取消喜欢</span>-->
        <!--            </button>-->
        <!--        </li>-->
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <a href="javascript:void(0);" class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></a>
            </button>
        </li>
        <li>
            <button class="left-fixed-btn btn-pinglun csdn-tracking-statistics" data-mod="popu_544" >
                <a href="javascript:void(0);" class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></a>
            </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <a href="javascript:void(0);" class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></a>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
    <div class="r_ico">
        <i class="icon iconfont icon-jubao"></i>
        <span class="txt" id="reportBtn">内容举报</span>
    </div>
    <div class="returnTop">
        <i class="icon iconfont icon-fanhuidingbu"></i>
        <span>返回顶部</span>
    </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/hn_lgc/article/details/53963627" target="_blank">Android Studio的gradle下配置ndk，jni</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
          console.log("version:phoenix");
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }
	            nowTime = {
		            year: new Date().getFullYear(),
		            month: parseInt(new Date().getMonth())+1,
		            day: new Date().getDate(),
		            hours: parseInt(new Date().getHours())+1,
		            minutes: parseInt(new Date().getMinutes())+1,
		            seconds: parseInt(new Date().getSeconds())+1
	            };
	            var data = {
		            articleId: fileName,
		            commentId: 0,
		            reportType: reportType,
		            originalurl: $("#originalurl").val(),
		            report_other_content: $("#report_other_content").val(),
		            report_description: $("#report_description").val(),
		            currentUserName: currentUserName,
		            updatetime: nowTime.year+'/'+nowTime.month+'/'+nowTime.day+' '+ nowTime.hours+':'+nowTime.minutes+':'+seconds,
		            blogUser: username
	            };
	            if(!isComment){//如果是举报文章
		            data.report_other_content = data.report_description;
		            // data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
	            }

	            $.post(blog_address + "/common/report?id="+fileName+"&t=2", data, function (data) {
		            if (data.result == 1){
			            SetError("感谢您的举报，我们会尽快审核！");
		            }else{
			            if (data.content) alert(data.content);
		            }

	            });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide();
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=2017.044"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.044"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();

    if($("#fan").html()=="")
    {
	    $("#fan").html(0);
    }
</script>
<script src="http://c.csdnimg.cn/public/common/append_mark/appendMark.min.js?v=5.00.43" type="text/javascript"></script>
<script type="text/javascript">
    appendMark($('.recommend_list').children('a').find('dt'),$('.extension_other'))
</script>
</body>
